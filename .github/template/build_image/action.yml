name: deploy

# Were we can define the inputs that our action will accept
inputs:
  repository_name:
    required: true
  namespace:
    required: true

runs:
  using: 'composite'
  # Defining the action steps(Just one step to be simple)
  steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Check Commit Message
      id: check_commit
      run: |
        commit_message=$(git log --format=%B -n 1 ${{ github.sha }})
        if [[ $commit_message =~ ^- ]]; then
          echo "::set-output name=deploy::false"
        else
          echo "::set-output name=deploy::true"
        fi

    - name: Configure AWS credentials
      if: steps.check_commit.outputs.deploy == 'true'
      uses: aws-actions/configure-aws-credentials@v3
      with:
        # aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        # aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region: us-west-1

    - name: Login to Amazon ECR
      if: steps.check_commit.outputs.deploy == 'true'
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with:
        mask-password: 'true'

    - name: Build, tag, and push image to Amazon ECR
      if: steps.check_commit.outputs.deploy == 'true'
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{inputs.repository_name }}
        # IMAGE_TAG: ${{ github.sha }}
        IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        # echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
